/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.yyms.adp.aaa.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.lar.StagedModelType;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import com.yyms.adp.aaa.model.YServices;
import com.yyms.adp.aaa.model.YServicesModel;
import com.yyms.adp.aaa.model.YServicesSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the YServices service. Represents a row in the &quot;CS_YServices&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.yyms.adp.aaa.model.YServicesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link YServicesImpl}.
 * </p>
 *
 * @author USER
 * @see YServicesImpl
 * @see com.yyms.adp.aaa.model.YServices
 * @see com.yyms.adp.aaa.model.YServicesModel
 * @generated
 */
@JSON(strict = true)
public class YServicesModelImpl extends BaseModelImpl<YServices>
	implements YServicesModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a y services model instance should use the {@link com.yyms.adp.aaa.model.YServices} interface instead.
	 */
	public static final String TABLE_NAME = "CS_YServices";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR },
			{ "yServicesId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "servicesName", Types.VARCHAR },
			{ "servicesPrice", Types.VARCHAR },
			{ "servicesDes", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table CS_YServices (uuid_ VARCHAR(75) null,yServicesId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,servicesName VARCHAR(75) null,servicesPrice VARCHAR(75) null,servicesDes VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CS_YServices";
	public static final String ORDER_BY_JPQL = " ORDER BY yServices.servicesName ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CS_YServices.servicesName ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.yyms.adp.aaa.model.YServices"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.yyms.adp.aaa.model.YServices"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.com.yyms.adp.aaa.model.YServices"),
			true);
	public static long COMPANYID_COLUMN_BITMASK = 1L;
	public static long GROUPID_COLUMN_BITMASK = 2L;
	public static long UUID_COLUMN_BITMASK = 4L;
	public static long SERVICESNAME_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static YServices toModel(YServicesSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		YServices model = new YServicesImpl();

		model.setUuid(soapModel.getUuid());
		model.setYServicesId(soapModel.getYServicesId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setServicesName(soapModel.getServicesName());
		model.setServicesPrice(soapModel.getServicesPrice());
		model.setServicesDes(soapModel.getServicesDes());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<YServices> toModels(YServicesSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<YServices> models = new ArrayList<YServices>(soapModels.length);

		for (YServicesSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.yyms.adp.aaa.model.YServices"));

	public YServicesModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _yServicesId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setYServicesId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _yServicesId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return YServices.class;
	}

	@Override
	public String getModelClassName() {
		return YServices.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("yServicesId", getYServicesId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("servicesName", getServicesName());
		attributes.put("servicesPrice", getServicesPrice());
		attributes.put("servicesDes", getServicesDes());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String)attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long yServicesId = (Long)attributes.get("yServicesId");

		if (yServicesId != null) {
			setYServicesId(yServicesId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String servicesName = (String)attributes.get("servicesName");

		if (servicesName != null) {
			setServicesName(servicesName);
		}

		String servicesPrice = (String)attributes.get("servicesPrice");

		if (servicesPrice != null) {
			setServicesPrice(servicesPrice);
		}

		String servicesDes = (String)attributes.get("servicesDes");

		if (servicesDes != null) {
			setServicesDes(servicesDes);
		}
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public long getYServicesId() {
		return _yServicesId;
	}

	@Override
	public void setYServicesId(long yServicesId) {
		_yServicesId = yServicesId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getServicesName() {
		if (_servicesName == null) {
			return StringPool.BLANK;
		}
		else {
			return _servicesName;
		}
	}

	@Override
	public void setServicesName(String servicesName) {
		_columnBitmask = -1L;

		_servicesName = servicesName;
	}

	@JSON
	@Override
	public String getServicesPrice() {
		if (_servicesPrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _servicesPrice;
		}
	}

	@Override
	public void setServicesPrice(String servicesPrice) {
		_servicesPrice = servicesPrice;
	}

	@JSON
	@Override
	public String getServicesDes() {
		if (_servicesDes == null) {
			return StringPool.BLANK;
		}
		else {
			return _servicesDes;
		}
	}

	@Override
	public void setServicesDes(String servicesDes) {
		_servicesDes = servicesDes;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(PortalUtil.getClassNameId(
				YServices.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			YServices.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public YServices toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (YServices)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		YServicesImpl yServicesImpl = new YServicesImpl();

		yServicesImpl.setUuid(getUuid());
		yServicesImpl.setYServicesId(getYServicesId());
		yServicesImpl.setGroupId(getGroupId());
		yServicesImpl.setCompanyId(getCompanyId());
		yServicesImpl.setUserId(getUserId());
		yServicesImpl.setUserName(getUserName());
		yServicesImpl.setCreateDate(getCreateDate());
		yServicesImpl.setModifiedDate(getModifiedDate());
		yServicesImpl.setServicesName(getServicesName());
		yServicesImpl.setServicesPrice(getServicesPrice());
		yServicesImpl.setServicesDes(getServicesDes());

		yServicesImpl.resetOriginalValues();

		return yServicesImpl;
	}

	@Override
	public int compareTo(YServices yServices) {
		int value = 0;

		value = getServicesName().compareTo(yServices.getServicesName());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof YServices)) {
			return false;
		}

		YServices yServices = (YServices)obj;

		long primaryKey = yServices.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		YServicesModelImpl yServicesModelImpl = this;

		yServicesModelImpl._originalUuid = yServicesModelImpl._uuid;

		yServicesModelImpl._originalGroupId = yServicesModelImpl._groupId;

		yServicesModelImpl._setOriginalGroupId = false;

		yServicesModelImpl._originalCompanyId = yServicesModelImpl._companyId;

		yServicesModelImpl._setOriginalCompanyId = false;

		yServicesModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<YServices> toCacheModel() {
		YServicesCacheModel yServicesCacheModel = new YServicesCacheModel();

		yServicesCacheModel.uuid = getUuid();

		String uuid = yServicesCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			yServicesCacheModel.uuid = null;
		}

		yServicesCacheModel.yServicesId = getYServicesId();

		yServicesCacheModel.groupId = getGroupId();

		yServicesCacheModel.companyId = getCompanyId();

		yServicesCacheModel.userId = getUserId();

		yServicesCacheModel.userName = getUserName();

		String userName = yServicesCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			yServicesCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			yServicesCacheModel.createDate = createDate.getTime();
		}
		else {
			yServicesCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			yServicesCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			yServicesCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		yServicesCacheModel.servicesName = getServicesName();

		String servicesName = yServicesCacheModel.servicesName;

		if ((servicesName != null) && (servicesName.length() == 0)) {
			yServicesCacheModel.servicesName = null;
		}

		yServicesCacheModel.servicesPrice = getServicesPrice();

		String servicesPrice = yServicesCacheModel.servicesPrice;

		if ((servicesPrice != null) && (servicesPrice.length() == 0)) {
			yServicesCacheModel.servicesPrice = null;
		}

		yServicesCacheModel.servicesDes = getServicesDes();

		String servicesDes = yServicesCacheModel.servicesDes;

		if ((servicesDes != null) && (servicesDes.length() == 0)) {
			yServicesCacheModel.servicesDes = null;
		}

		return yServicesCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", yServicesId=");
		sb.append(getYServicesId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", servicesName=");
		sb.append(getServicesName());
		sb.append(", servicesPrice=");
		sb.append(getServicesPrice());
		sb.append(", servicesDes=");
		sb.append(getServicesDes());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.yyms.adp.aaa.model.YServices");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>yServicesId</column-name><column-value><![CDATA[");
		sb.append(getYServicesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>servicesName</column-name><column-value><![CDATA[");
		sb.append(getServicesName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>servicesPrice</column-name><column-value><![CDATA[");
		sb.append(getServicesPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>servicesDes</column-name><column-value><![CDATA[");
		sb.append(getServicesDes());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = YServices.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			YServices.class
		};
	private String _uuid;
	private String _originalUuid;
	private long _yServicesId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private String _servicesName;
	private String _servicesPrice;
	private String _servicesDes;
	private long _columnBitmask;
	private YServices _escapedModel;
}